.sign-container.d-flex.flex-column.align-items-center
  %h2.display-5
    Edit #{resource_name.to_s.humanize}
  = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
    .field
      = f.label :email, class: 'form-label mt-2'
      = f.email_field :email, autofocus: true, autocomplete: 'email', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:email]
    - if devise_mapping.confirmable? && resource.pending_reconfirmation?
      %div
        Currently waiting confirmation for: #{resource.unconfirmed_email}
    .field
      = f.label :nickname, class: 'form-label mt-2'
      = f.text_field :nickname, autofocus: true, autocomplete: 'nickname', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:nickname]
    .field
      = f.label :first_name, class: 'form-label mt-2'
      = f.text_field :first_name, autofocus: true, autocomplete: 'first_name', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:first_name]
    .field
      = f.label :last_name, class: 'form-label mt-2'
      = f.text_field :last_name, autofocus: true, autocomplete: 'last_name', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:last_name]
    .field
      = f.label :avatar, class: 'form-label mt-2'
      = f.file_field :avatar, accept: 'image/*',  autofocus: true, autocomplete: 'avatar', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:avatar]
    .field
      = f.label :current_password, class: 'form-label mt-2'
      = f.password_field :current_password, autocomplete: 'current-password', class: 'form-control mb-2'
      - if resource.errors[:current_password].include?("can't be blank")
        = render 'errors/error_fields', errors: ['enter your password to confirm changes']
      - elsif resource.errors[:current_password].include?('is invalid')
        = render 'errors/error_fields', errors: ['password is incorrect']
      - else
        = render 'errors/error_fields', errors: resource.errors[:current_password]
    .field
      = f.label :password, class: 'form-label mt-2'
      = f.password_field :password, autocomplete: 'new-password', class: 'form-control mb-0'
      - if @minimum_password_length
        %em
          = @minimum_password_length
          characters minimum
      = render 'errors/error_fields', errors: resource.errors[:password]
    .field
      = f.label :password_confirmation, class: 'form-label mt-3'
      = f.password_field :password_confirmation, autocomplete: 'new-password', class: 'form-control mb-2'
      = render 'errors/error_fields', errors: resource.errors[:password_confirmation]
    .actions-edit-submit
      = f.submit 'Update', class: 'btn btn-primary btn-update'
