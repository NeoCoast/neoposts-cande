.row.g-0
  .col-md-1.col-post-data
    - if post.user.avatar.persisted?
      = link_to user_show_path(post.user.nickname), class: 'user_link_info' do
        = image_tag post.user.avatar, class: 'rounded-circle user-img-post'
  .col-md-11
    .post-info.div.card
      .post-intro
        = link_to user_show_path(post.user.nickname), class: 'user_link_info' do
          = post.user.nickname
          %br
          = post.user.email
          |
          = distance_of_time_in_words(post.published_at, Time.now) + ' ago'
        - if post.user == current_user
          = render partial: 'partials/modal_delete', locals: { post_id: post.id, in_index: in_index }
      - if post_links
        = link_to post_path(post), class: 'post_link' do
          = render partial: 'posts/post_elements', locals: { post: post }
      - else
        = render partial: 'posts/post_elements', locals: { post: post }
  .interactions
    .like
      - liked = post.likes.find_by(user_id: current_user.id).present?
      = button_tag 'Like', class: 'btn btn-primary btn-like', data: { liked: liked, likeable_id: post.id, likeable_type: 'Post' }, remote: true
      .likes_count
        = post.likes.count
    = link_to post_path(post, anchor: 'post_comment'), class: 'btn btn-comment btn-primary' do
      Comment
    .comments_count
      = post.comments.count
